function [deviation,devFlag,diffCoef] = msdDeviation2D3D(track,nPoints,...
    alpha,probDim)
%MSDDEVIATION2D3D estimates the deviation of a track's MSD from a straight line
%
%SYNPOSIS [deviation,devFlag,diffCoef] = msdDeviation2D3D(track,nPoints,...
%    alpha,probDim)
%
%INPUT  track    : Row vector indicating the positions and amplitudes along
%                  a track.
%                  [x1 y1 z1 a1 dx1 dy1 dz1 da1 x2 y2 z2 a2 dx2 dy2 dz2 da2 ...].
%       nPoints  : Number of points to use in calculating diffusion
%                  coefficient.
%                  Optional. Default: 5.
%       alpha    : Alpha-value for determining the threshold.
%                  Optional. Default: 0.1.
%       probDim  : Problem dimensionality. 2 for 2D, 3 for 3D.
%                  Optional. Default: 2.
%
%OUTPUT deviation: Deviation of MSD curve from straight line
%       devFlag  : 1 if deviation is negative and significant, (given the
%                  input alpha-value), 0 otherwise.
%       diffCoef : Diffusion coefficient.
%
%Khuloud Jaqaman, February 2008

%% input

%default number of MSD points
if nargin < 2 || isempty(nPoints)
    nPoints = 5;
end

%default alpha
if nargin < 3 || isempty(alpha)
    alpha = 0.1;
else
    if ~any(alpha == [0.1 0.05])
        disp('--msdDeviation2D3D: alpha can take only the values 0.05 or 0.1');
        disp('                    assigning default value of 0.1');
        alpha = 0.1;
    end
end

%default probDim
if nargin < 4 || isempty(probDim)
    probDim = 2;
end

%get number of time points in track
trackSEL = getTrackSEL(track);
startTime = trackSEL(1);
endTime = trackSEL(2);
numTimePoints = trackSEL(3);

%determine threshold based on alpha-value and dimensionality
switch probDim
    case 2
        switch alpha
            case 0.2  %10th percentile (remaining 10% at other distribution end)
                devThresh = thresh2D_20(numTimePoints);
            case 0.1  %5th percentile (remaining 5% at other distribution end)
                devThresh = thresh2D_10(numTimePoints);
            case 0.05 %2.5th percentile (remaining 2.5% at other distribution end)
                devThresh = thresh2D_05(numTimePoints);
        end
    case 3
        switch alpha
            case 0.2  %10th percentile (remaining 10% at other distribution end)
                devThresh = thresh3D_20(numTimePoints);
            case 0.1  %5th percentile (remaining 5% at other distribution end)
                devThresh = thresh3D_10(numTimePoints);
            case 0.05 %2.5th percentile (remaining 2.5% at other distribution end)
                devThresh = thresh3D_05(numTimePoints);
        end
end

%% mean square displacement

%define maximum time lag for MSD calculation
maxLag = min(30,floor(numTimePoints/4));

%get positions over time
coordinates = [track(1:8:end)' track(2:8:end)' track(3:8:end)'];
coordinates = coordinates(startTime:endTime,:);

%get corresponding standard deviations
standardDevs = [track(5:8:end)' track(6:8:end)' track(7:8:end)'];
standardDevs = standardDevs(startTime:endTime,:);

%get the mean squared displacement
msdCurveT = calcTrackMoments(coordinates,standardDevs,2,maxLag);
msdCurve = msdCurveT(1).momentValues(:,1);

%% diffusion coefficient & deviation from straight line

%if there are enough points to fit ...
if length(find(~isnan(msdCurve))) >= nPoints

    %fit the first nPoints points of the MSD curve with a straight line that
    %goes through the origin
    options = optimset('Display','off','Jacobian','on');
    data4fit = msdCurve(1:nPoints);
    x = find(~isnan(data4fit));
    y = data4fit(x);
    slope0 = y(end) / x(end); %initial guess
    %     slope = lsqcurvefit(@strLineFun,slope0,x,y,0,[],options);
    lnSlope = lsqcurvefit(@strLineFun2,log(slope0),log(x),log(y),[],[],options);
    slope = exp(lnSlope);

    %extract the diffusion coefficient
    diffCoef = slope / 2 / probDim;

    %get the maximum time lag in MSD curve
    maxLag = length(msdCurve);

    %construct the straight line representing pure Brownian motion from the
    %track's diffusion coefficient
    pureBrownLine = slope * (1:maxLag)';

    %calculate deviation from straight line
    deviation = nanmean( (msdCurve - pureBrownLine) ./ pureBrownLine );

    %compare deviation parameter to threshold
    devFlag = deviation < devThresh(numTimePoints);

else %if there aren't enough points, give the track a diffusion coefficient = NaN

    diffCoef = NaN;
    deviation = NaN;
    devFlag = NaN;

end

%% subfunction 1
% function [y,d] = strLineFun(slope,x)
%
% y = slope * x;
% d = slope * ones(size(x));


%% subfunction 2
function [y,d] = strLineFun2(logSlope,x)

y = logSlope + x;
d = ones(size(x));


%% thresholds

function x = thresh2D_05(nTP)

x = [0.0006    0.0006    0.0004    0.0004   -0.0514   -0.0496   -0.0483   -0.0486 ...
    -0.1092   -0.1026   -0.0973   -0.0982   -0.1466   -0.1461   -0.1405   -0.1404 ...
    -0.1748   -0.1755   -0.1744   -0.1763   -0.2054   -0.2020   -0.2017   -0.2036 ...
    -0.2315   -0.2263   -0.2264   -0.2227   -0.2483   -0.2442   -0.2409   -0.2323 ...
    -0.2567   -0.2568   -0.2504   -0.2449   -0.2648   -0.2614   -0.2652   -0.2590 ...
    -0.2809   -0.2745   -0.2687   -0.2688   -0.2787   -0.2746   -0.2703   -0.2649 ...
    -0.2839   -0.2828   -0.2844   -0.2861   -0.2973   -0.2953   -0.2971   -0.2979 ...
    -0.3089   -0.3097   -0.3069   -0.3082   -0.3219   -0.3183   -0.3145   -0.3114 ...
    -0.3128   -0.3098   -0.3083   -0.3047   -0.3193   -0.3197   -0.3200   -0.3121 ...
    -0.3269   -0.3283   -0.3239   -0.3196   -0.3294   -0.3230   -0.3187   -0.3148 ...
    -0.3231   -0.3230   -0.3229   -0.3228   -0.3227   -0.3225   -0.3224   -0.3223 ...
    -0.3222   -0.3221   -0.3220   -0.3218   -0.3217   -0.3216   -0.3215   -0.3214 ...
    -0.3212   -0.3211   -0.3210   -0.3209   -0.3208   -0.3207   -0.3205   -0.3204 ...
    -0.3203   -0.3202   -0.3201   -0.3200   -0.3198   -0.3197   -0.3196   -0.3195 ...
    -0.3194   -0.3193   -0.3191   -0.3190   -0.3189   -0.3188   -0.3187   -0.3185 ...
    -0.3184   -0.3183   -0.3182   -0.3181   -0.3180   -0.3178   -0.3177   -0.3176 ...
    -0.3175   -0.3174   -0.3173   -0.3166   -0.3159   -0.3153   -0.3146   -0.3140 ...
    -0.3133   -0.3126   -0.3120   -0.3113   -0.3107   -0.3100   -0.3094   -0.3087 ...
    -0.3080   -0.3074   -0.3067   -0.3061   -0.3054   -0.3047   -0.3041   -0.3034 ...
    -0.3028   -0.3021   -0.3015   -0.3008   -0.3001   -0.2995   -0.2988   -0.2982 ...
    -0.2975   -0.2968   -0.2962   -0.2955   -0.2949   -0.2942   -0.2936   -0.2929 ...
    -0.2922   -0.2916   -0.2909   -0.2903   -0.2896   -0.2889   -0.2883   -0.2876 ...
    -0.2870   -0.2863   -0.2857   -0.2850   -0.2843   -0.2839   -0.2835   -0.2831 ...
    -0.2827   -0.2822   -0.2818   -0.2814   -0.2810   -0.2806   -0.2802   -0.2797 ...
    -0.2793   -0.2789   -0.2785   -0.2781   -0.2776   -0.2772   -0.2768   -0.2764 ...
    -0.2760   -0.2755   -0.2751   -0.2747   -0.2743   -0.2739   -0.2735   -0.2730 ...
    -0.2726   -0.2722   -0.2718   -0.2714   -0.2709   -0.2705   -0.2701   -0.2697 ...
    -0.2693   -0.2688   -0.2684   -0.2680   -0.2676   -0.2672   -0.2668   -0.2663 ...
    -0.2659   -0.2655   -0.2651   -0.2647   -0.2642   -0.2638   -0.2634   -0.2627 ...
    -0.2620   -0.2614   -0.2607   -0.2600   -0.2593   -0.2587   -0.2580   -0.2573 ...
    -0.2566   -0.2560   -0.2553   -0.2546   -0.2539   -0.2533   -0.2526   -0.2519 ...
    -0.2512   -0.2505   -0.2499   -0.2492   -0.2485   -0.2478   -0.2472   -0.2465 ...
    -0.2458   -0.2451   -0.2445   -0.2438   -0.2431   -0.2424   -0.2418   -0.2411 ...
    -0.2404   -0.2397   -0.2390   -0.2384   -0.2377   -0.2370   -0.2363   -0.2357 ...
    -0.2350   -0.2343   -0.2336   -0.2330   -0.2323   -0.2316   -0.2309   -0.2302 ...
    -0.2296   -0.2294   -0.2293   -0.2292   -0.2290   -0.2289   -0.2287   -0.2286 ...
    -0.2285   -0.2283   -0.2282   -0.2281   -0.2279   -0.2278   -0.2276   -0.2275 ...
    -0.2274   -0.2272   -0.2271   -0.2269   -0.2268   -0.2267   -0.2265   -0.2264 ...
    -0.2263   -0.2261   -0.2260   -0.2258   -0.2257   -0.2256   -0.2254   -0.2253 ...
    -0.2251   -0.2250   -0.2249   -0.2247   -0.2246   -0.2245   -0.2243   -0.2242 ...
    -0.2240   -0.2239   -0.2238   -0.2236   -0.2235   -0.2233   -0.2232   -0.2231 ...
    -0.2229   -0.2228   -0.2227   -0.2225   -0.2224   -0.2223   -0.2222   -0.2221 ...
    -0.2220   -0.2219   -0.2218   -0.2217   -0.2215   -0.2214   -0.2213   -0.2212 ...
    -0.2211   -0.2210   -0.2209   -0.2208   -0.2206   -0.2205   -0.2204   -0.2203 ...
    -0.2202   -0.2201   -0.2200   -0.2199   -0.2198   -0.2196   -0.2195   -0.2194 ...
    -0.2193   -0.2192   -0.2191   -0.2190   -0.2189   -0.2188   -0.2186   -0.2185 ...
    -0.2184   -0.2183   -0.2182   -0.2181   -0.2180   -0.2179   -0.2177   -0.2176 ...
    -0.2175   -0.2174   -0.2173   -0.2172   -0.2171   -0.2165   -0.2158   -0.2152 ...
    -0.2146   -0.2140   -0.2134   -0.2127   -0.2121   -0.2115   -0.2109   -0.2103 ...
    -0.2096   -0.2090   -0.2084   -0.2078   -0.2072   -0.2066   -0.2059   -0.2053 ...
    -0.2047   -0.2041   -0.2035   -0.2028   -0.2022   -0.2016   -0.2010   -0.2004 ...
    -0.1997   -0.1991   -0.1985   -0.1979   -0.1973   -0.1966   -0.1960   -0.1954 ...
    -0.1948   -0.1942   -0.1935   -0.1929   -0.1923   -0.1917   -0.1911   -0.1905 ...
    -0.1898   -0.1892   -0.1886   -0.1880   -0.1874   -0.1867   -0.1861   -0.1858 ...
    -0.1855   -0.1852   -0.1849   -0.1846   -0.1843   -0.1840   -0.1837   -0.1834 ...
    -0.1831   -0.1828   -0.1825   -0.1822   -0.1819   -0.1816   -0.1813   -0.1810 ...
    -0.1807   -0.1804   -0.1801   -0.1798   -0.1795   -0.1792   -0.1789   -0.1786 ...
    -0.1783   -0.1780   -0.1777   -0.1773   -0.1770   -0.1767   -0.1764   -0.1761 ...
    -0.1758   -0.1755   -0.1752   -0.1749   -0.1746   -0.1743   -0.1740   -0.1737 ...
    -0.1734   -0.1731   -0.1728   -0.1725   -0.1722   -0.1719   -0.1716   -0.1713 ...
    -0.1710];

x = [NaN(1,19) x -0.17*ones(1,nTP-500)];


function x = thresh2D_10(nTP)

x = [0.0009    0.0008    0.0006    0.0006   -0.0450   -0.0434   -0.0432   -0.0424 ...
    -0.0957   -0.0921   -0.0909   -0.0864   -0.1276   -0.1275   -0.1242   -0.1234 ...
    -0.1604   -0.1614   -0.1562   -0.1545   -0.1827   -0.1812   -0.1771   -0.1723 ...
    -0.1960   -0.1989   -0.1969   -0.1974   -0.2176   -0.2099   -0.2027   -0.1922 ...
    -0.2162   -0.2124   -0.2100   -0.2107   -0.2303   -0.2262   -0.2274   -0.2288 ...
    -0.2452   -0.2414   -0.2398   -0.2359   -0.2442   -0.2422   -0.2382   -0.2335 ...
    -0.2448   -0.2501   -0.2449   -0.2417   -0.2555   -0.2548   -0.2543   -0.2484 ...
    -0.2573   -0.2617   -0.2612   -0.2592   -0.2685   -0.2684   -0.2703   -0.2699 ...
    -0.2741   -0.2752   -0.2740   -0.2713   -0.2789   -0.2741   -0.2744   -0.2743 ...
    -0.2807   -0.2797   -0.2792   -0.2802   -0.2861   -0.2845   -0.2904   -0.2914 ...
    -0.2948   -0.2945   -0.2942   -0.2938   -0.2935   -0.2932   -0.2929   -0.2925 ...
    -0.2922   -0.2919   -0.2915   -0.2912   -0.2909   -0.2905   -0.2902   -0.2899 ...
    -0.2895   -0.2892   -0.2889   -0.2885   -0.2882   -0.2879   -0.2875   -0.2872 ...
    -0.2869   -0.2865   -0.2862   -0.2859   -0.2855   -0.2852   -0.2849   -0.2846 ...
    -0.2842   -0.2839   -0.2836   -0.2832   -0.2829   -0.2826   -0.2822   -0.2819 ...
    -0.2816   -0.2812   -0.2809   -0.2806   -0.2802   -0.2799   -0.2796   -0.2792 ...
    -0.2789   -0.2786   -0.2782   -0.2773   -0.2764   -0.2754   -0.2745   -0.2736 ...
    -0.2726   -0.2717   -0.2708   -0.2698   -0.2689   -0.2680   -0.2670   -0.2661 ...
    -0.2652   -0.2642   -0.2633   -0.2624   -0.2614   -0.2605   -0.2596   -0.2586 ...
    -0.2577   -0.2568   -0.2558   -0.2549   -0.2540   -0.2530   -0.2521   -0.2512 ...
    -0.2502   -0.2493   -0.2484   -0.2475   -0.2465   -0.2456   -0.2447   -0.2437 ...
    -0.2428   -0.2419   -0.2409   -0.2400   -0.2391   -0.2381   -0.2372   -0.2363 ...
    -0.2353   -0.2344   -0.2335   -0.2325   -0.2316   -0.2313   -0.2311   -0.2308 ...
    -0.2306   -0.2303   -0.2300   -0.2298   -0.2295   -0.2293   -0.2290   -0.2288 ...
    -0.2285   -0.2283   -0.2280   -0.2277   -0.2275   -0.2272   -0.2270   -0.2267 ...
    -0.2265   -0.2262   -0.2259   -0.2257   -0.2254   -0.2252   -0.2249   -0.2247 ...
    -0.2244   -0.2241   -0.2239   -0.2236   -0.2234   -0.2231   -0.2229   -0.2226 ...
    -0.2223   -0.2221   -0.2218   -0.2216   -0.2213   -0.2211   -0.2208   -0.2206 ...
    -0.2203   -0.2200   -0.2198   -0.2195   -0.2193   -0.2190   -0.2188   -0.2183 ...
    -0.2178   -0.2173   -0.2169   -0.2164   -0.2159   -0.2155   -0.2150   -0.2145 ...
    -0.2140   -0.2136   -0.2131   -0.2126   -0.2122   -0.2117   -0.2112   -0.2108 ...
    -0.2103   -0.2098   -0.2093   -0.2089   -0.2084   -0.2079   -0.2075   -0.2070 ...
    -0.2065   -0.2060   -0.2056   -0.2051   -0.2046   -0.2042   -0.2037   -0.2032 ...
    -0.2028   -0.2023   -0.2018   -0.2013   -0.2009   -0.2004   -0.1999   -0.1995 ...
    -0.1990   -0.1985   -0.1980   -0.1976   -0.1971   -0.1966   -0.1962   -0.1957 ...
    -0.1952   -0.1951   -0.1950   -0.1949   -0.1948   -0.1947   -0.1946   -0.1944 ...
    -0.1943   -0.1942   -0.1941   -0.1940   -0.1939   -0.1938   -0.1937   -0.1935 ...
    -0.1934   -0.1933   -0.1932   -0.1931   -0.1930   -0.1929   -0.1928   -0.1927 ...
    -0.1925   -0.1924   -0.1923   -0.1922   -0.1921   -0.1920   -0.1919   -0.1918 ...
    -0.1917   -0.1915   -0.1914   -0.1913   -0.1912   -0.1911   -0.1910   -0.1909 ...
    -0.1908   -0.1906   -0.1905   -0.1904   -0.1903   -0.1902   -0.1901   -0.1900 ...
    -0.1899   -0.1898   -0.1896   -0.1895   -0.1894   -0.1893   -0.1892   -0.1891 ...
    -0.1889   -0.1888   -0.1887   -0.1886   -0.1885   -0.1884   -0.1882   -0.1881 ...
    -0.1880   -0.1879   -0.1878   -0.1877   -0.1876   -0.1874   -0.1873   -0.1872 ...
    -0.1871   -0.1870   -0.1869   -0.1867   -0.1866   -0.1865   -0.1864   -0.1863 ...
    -0.1862   -0.1860   -0.1859   -0.1858   -0.1857   -0.1856   -0.1855   -0.1853 ...
    -0.1852   -0.1851   -0.1850   -0.1849   -0.1848   -0.1846   -0.1845   -0.1844 ...
    -0.1843   -0.1842   -0.1841   -0.1840   -0.1838   -0.1833   -0.1828   -0.1823 ...
    -0.1818   -0.1813   -0.1808   -0.1803   -0.1798   -0.1793   -0.1788   -0.1783 ...
    -0.1778   -0.1773   -0.1768   -0.1763   -0.1758   -0.1753   -0.1748   -0.1743 ...
    -0.1738   -0.1733   -0.1729   -0.1724   -0.1719   -0.1714   -0.1709   -0.1704 ...
    -0.1699   -0.1694   -0.1689   -0.1684   -0.1679   -0.1674   -0.1669   -0.1664 ...
    -0.1659   -0.1654   -0.1649   -0.1644   -0.1639   -0.1634   -0.1629   -0.1624 ...
    -0.1619   -0.1614   -0.1609   -0.1604   -0.1599   -0.1594   -0.1589   -0.1588 ...
    -0.1587   -0.1587   -0.1586   -0.1586   -0.1585   -0.1584   -0.1584   -0.1583 ...
    -0.1582   -0.1582   -0.1581   -0.1580   -0.1580   -0.1579   -0.1579   -0.1578 ...
    -0.1577   -0.1577   -0.1576   -0.1575   -0.1575   -0.1574   -0.1573   -0.1573 ...
    -0.1572   -0.1572   -0.1571   -0.1570   -0.1570   -0.1569   -0.1568   -0.1568 ...
    -0.1567   -0.1566   -0.1566   -0.1565   -0.1565   -0.1564   -0.1563   -0.1563 ...
    -0.1562   -0.1561   -0.1561   -0.1560   -0.1559   -0.1559   -0.1558   -0.1558 ...
    -0.1557];

x = [NaN(1,19) x -0.1557*ones(1,nTP-500)];


function x = thresh2D_20(nTP)

x = [0.0013    0.0012    0.0010    0.0011   -0.0371   -0.0354   -0.0358   -0.0342 ...
    -0.0750   -0.0746   -0.0744   -0.0736   -0.1070   -0.1043   -0.1039   -0.1045 ...
    -0.1328   -0.1285   -0.1237   -0.1202   -0.1430   -0.1400   -0.1413   -0.1410 ...
    -0.1596   -0.1554   -0.1566   -0.1534   -0.1701   -0.1689   -0.1673   -0.1619 ...
    -0.1788   -0.1752   -0.1722   -0.1726   -0.1898   -0.1891   -0.1820   -0.1792 ...
    -0.1940   -0.1969   -0.1967   -0.1944   -0.2044   -0.2049   -0.2000   -0.1984 ...
    -0.2126   -0.2097   -0.2033   -0.2034   -0.2097   -0.2099   -0.2090   -0.2120 ...
    -0.2196   -0.2178   -0.2154   -0.2113   -0.2215   -0.2208   -0.2233   -0.2248 ...
    -0.2363   -0.2371   -0.2328   -0.2332   -0.2417   -0.2401   -0.2391   -0.2362 ...
    -0.2405   -0.2372   -0.2305   -0.2253   -0.2294   -0.2286   -0.2299   -0.2293 ...
    -0.2362   -0.2357   -0.2353   -0.2349   -0.2345   -0.2341   -0.2337   -0.2333 ...
    -0.2329   -0.2325   -0.2321   -0.2316   -0.2312   -0.2308   -0.2304   -0.2300 ...
    -0.2296   -0.2292   -0.2288   -0.2284   -0.2280   -0.2275   -0.2271   -0.2267 ...
    -0.2263   -0.2259   -0.2255   -0.2251   -0.2247   -0.2243   -0.2239   -0.2234 ...
    -0.2230   -0.2226   -0.2222   -0.2218   -0.2214   -0.2210   -0.2206   -0.2202 ...
    -0.2198   -0.2193   -0.2189   -0.2185   -0.2181   -0.2177   -0.2173   -0.2169 ...
    -0.2165   -0.2161   -0.2156   -0.2152   -0.2147   -0.2143   -0.2138   -0.2134 ...
    -0.2129   -0.2125   -0.2120   -0.2115   -0.2111   -0.2106   -0.2102   -0.2097 ...
    -0.2093   -0.2088   -0.2083   -0.2079   -0.2074   -0.2070   -0.2065   -0.2061 ...
    -0.2056   -0.2052   -0.2047   -0.2042   -0.2038   -0.2033   -0.2029   -0.2024 ...
    -0.2020   -0.2015   -0.2010   -0.2006   -0.2001   -0.1997   -0.1992   -0.1988 ...
    -0.1983   -0.1979   -0.1974   -0.1969   -0.1965   -0.1960   -0.1956   -0.1951 ...
    -0.1947   -0.1942   -0.1937   -0.1933   -0.1928   -0.1927   -0.1926   -0.1925 ...
    -0.1924   -0.1923   -0.1921   -0.1920   -0.1919   -0.1918   -0.1917   -0.1915 ...
    -0.1914   -0.1913   -0.1912   -0.1911   -0.1910   -0.1908   -0.1907   -0.1906 ...
    -0.1905   -0.1904   -0.1903   -0.1901   -0.1900   -0.1899   -0.1898   -0.1897 ...
    -0.1896   -0.1894   -0.1893   -0.1892   -0.1891   -0.1890   -0.1889   -0.1887 ...
    -0.1886   -0.1885   -0.1884   -0.1883   -0.1881   -0.1880   -0.1879   -0.1878 ...
    -0.1877   -0.1876   -0.1874   -0.1873   -0.1872   -0.1871   -0.1870   -0.1864 ...
    -0.1858   -0.1852   -0.1846   -0.1840   -0.1834   -0.1828   -0.1822   -0.1817 ...
    -0.1811   -0.1805   -0.1799   -0.1793   -0.1787   -0.1781   -0.1775   -0.1769 ...
    -0.1763   -0.1757   -0.1751   -0.1746   -0.1740   -0.1734   -0.1728   -0.1722 ...
    -0.1716   -0.1710   -0.1704   -0.1698   -0.1692   -0.1686   -0.1681   -0.1675 ...
    -0.1669   -0.1663   -0.1657   -0.1651   -0.1645   -0.1639   -0.1633   -0.1627 ...
    -0.1621   -0.1615   -0.1610   -0.1604   -0.1598   -0.1592   -0.1586   -0.1580 ...
    -0.1574   -0.1573   -0.1572   -0.1572   -0.1571   -0.1570   -0.1569   -0.1568 ...
    -0.1567   -0.1567   -0.1566   -0.1565   -0.1564   -0.1563   -0.1562   -0.1561 ...
    -0.1561   -0.1560   -0.1559   -0.1558   -0.1557   -0.1556   -0.1556   -0.1555 ...
    -0.1554   -0.1553   -0.1552   -0.1551   -0.1550   -0.1550   -0.1549   -0.1548 ...
    -0.1547   -0.1546   -0.1545   -0.1545   -0.1544   -0.1543   -0.1542   -0.1541 ...
    -0.1540   -0.1539   -0.1539   -0.1538   -0.1537   -0.1536   -0.1535   -0.1534 ...
    -0.1534   -0.1533   -0.1532   -0.1530   -0.1529   -0.1528   -0.1526   -0.1525 ...
    -0.1523   -0.1522   -0.1520   -0.1519   -0.1517   -0.1516   -0.1515   -0.1513 ...
    -0.1512   -0.1510   -0.1509   -0.1507   -0.1506   -0.1504   -0.1503   -0.1502 ...
    -0.1500   -0.1499   -0.1497   -0.1496   -0.1494   -0.1493   -0.1491   -0.1490 ...
    -0.1489   -0.1487   -0.1486   -0.1484   -0.1483   -0.1481   -0.1480   -0.1478 ...
    -0.1477   -0.1475   -0.1474   -0.1473   -0.1471   -0.1470   -0.1468   -0.1467 ...
    -0.1465   -0.1464   -0.1462   -0.1461   -0.1460   -0.1456   -0.1453   -0.1450 ...
    -0.1447   -0.1443   -0.1440   -0.1437   -0.1434   -0.1430   -0.1427   -0.1424 ...
    -0.1420   -0.1417   -0.1414   -0.1411   -0.1407   -0.1404   -0.1401   -0.1398 ...
    -0.1394   -0.1391   -0.1388   -0.1385   -0.1381   -0.1378   -0.1375   -0.1372 ...
    -0.1368   -0.1365   -0.1362   -0.1359   -0.1355   -0.1352   -0.1349   -0.1346 ...
    -0.1342   -0.1339   -0.1336   -0.1333   -0.1329   -0.1326   -0.1323   -0.1320 ...
    -0.1316   -0.1313   -0.1310   -0.1307   -0.1303   -0.1300   -0.1297   -0.1295 ...
    -0.1293   -0.1291   -0.1289   -0.1287   -0.1285   -0.1284   -0.1282   -0.1280 ...
    -0.1278   -0.1276   -0.1274   -0.1272   -0.1270   -0.1269   -0.1267   -0.1265 ...
    -0.1263   -0.1261   -0.1259   -0.1257   -0.1255   -0.1253   -0.1252   -0.1250 ...
    -0.1248   -0.1246   -0.1244   -0.1242   -0.1240   -0.1238   -0.1237   -0.1235 ...
    -0.1233   -0.1231   -0.1229   -0.1227   -0.1225   -0.1223   -0.1221   -0.1220 ...
    -0.1218   -0.1216   -0.1214   -0.1212   -0.1210   -0.1208   -0.1206   -0.1205 ...
    -0.1203];

x = [NaN(1,19) x -0.12*ones(1,nTP-500)];
